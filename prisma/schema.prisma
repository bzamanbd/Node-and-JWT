// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{ 
  id Int @id @default(autoincrement())
  name String? @default("")
  email String @unique
  password String? 
  avatar String?
  post Post[]
  comment Comment[]
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt() 
}

model Post{ 
  id Int @id @default(autoincrement()) 
  user User @relation(fields: [userId], references: [id],onDelete: Cascade) 
  userId Int
  title String 
  description String? @default("") 
  photos PostPhoto[]
  comment Comment[] 
  commentCount Int @default(0)
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt()
  
}

model PostPhoto{ 
  id Int @id @default(autoincrement()) 
  url String
  postId Int
  post Post @relation(fields: [postId],references: [id])
}

model Comment{ 
  id Int @id @default(autoincrement())
  post Post @relation(fields: [postId],references: [id], onDelete: Cascade) 
  postId Int
  user User @relation(fields: [userId],references: [id], onDelete: Cascade)
  userId Int
  comment String 
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt()
}
